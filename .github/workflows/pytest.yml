name: Install and Pytests

on:
  push:
    branches:
      - master
      - develop
      - trunk-merge/**
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:
  workflow_call:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    environment: testing
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python-version: [3.9]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install python dependecies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_test.txt

      - name: Install CRIPT Python SDK
        run: pip install -e .

      - name: Run pytest
        env:
          IMAGE_VERSION: ${{ secrets.IMAGE_VERSION }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          DEBUG: ${{ secrets.DEBUG }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GLOBUS_AUTH_CLIENT_ID: ${{ secrets.GLOBUS_AUTH_CLIENT_ID }}
          GLOBUS_AUTH_SECRET: ${{ secrets.GLOBUS_AUTH_SECRET }}
          GLOBUS_ACCESS_MANAGER_CLIENT_ID: ${{ secrets.GLOBUS_ACCESS_MANAGER_CLIENT_ID }}
          GLOBUS_ACCESS_MANAGER_SECRET: ${{ secrets.GLOBUS_ACCESS_MANAGER_SECRET }}
          GLOBUS_NATIVE_CLIENT_ID: ${{ secrets.GLOBUS_NATIVE_CLIENT_ID }}
          GLOBUS_ENDPOINT_ID: ${{ secrets.GLOBUS_ENDPOINT_ID }}
          STORAGE_PROVIDER: ${{ secrets.GLOBUS_ENDPOINT_ID }}
          STORAGE_PATH: ${{ secrets.GLOBUS_ENDPOINT_ID }}
        run: |
          python -m pytest
